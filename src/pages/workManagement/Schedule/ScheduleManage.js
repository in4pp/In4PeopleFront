import HRApplistCSS from "../../personnel/HR/HRApplist.module.css";
import ScheduleCSS from "../workCSS/Schedule.module.css";
import React, { useEffect, useState } from "react";
import { callScheduleManageAPI } from "../../../apis/WorkManageAPICalls";
import { callScheduleManageDetailAPI } from "../../../apis/WorkManageDetailAPICalls";
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import { callScheduleManageUpdateAPI } from "../../../apis/WorkManageAPICalls";

function SchedulManage() {
  const dispatch = useDispatch();
  const sclist = useSelector((state) => state.workmanageReducer);
  const data2 = useSelector((state) => state.workManageDetailReducer);
  console.log("sclist : ", sclist);
  console.log("data2 : ", data2);
  const [selectedBtn, setSelectedBtn] = useState(null); // ÏäπÏù∏ÏÉÅÌÉú Î≤ÑÌäº ÏÑ†ÌÉù
  const [checkedBox, setCheckedBox] = useState(new Map()); // Ï≤¥ÌÅ¨Î∞ïÏä§ ÏÑ†ÌÉù
  const [accordionOpen, setAccordionOpen] = useState([]); // Í∑ºÎ¨¥ÏÉÅÏÑ∏Î≥¥Í∏∞ ÏïÑÏΩîÎîîÏñ∏
  const navigate = useNavigate();
  const [form, setForm] = useState({});

  if (sclist !== undefined) {
    console.log("sclist", sclist);
  }
  useEffect(() => {
    dispatch(callScheduleManageAPI());
  }, []);

  const handleCheckBoxClick = (e, id) => {
    const isChecked = e.target.checked;
    setCheckedBox((prevState) => {
      const newCheckedBox = new Map(prevState);
      newCheckedBox.set(id, isChecked);
      return newCheckedBox;
    });
  };

  function handleBtnClick(buttonIndex) {
    setSelectedBtn(buttonIndex);
  }

  function getBtnStyle(buttonIndex) {
    if (selectedBtn === buttonIndex) {
      return { backgroundColor: "#c3edbf82" }; // ÏÑ†ÌÉùÌïú Î≤ÑÌäº ÏÉâÏÉÅ
    }
    return { backgroundColor: "white" }; // ÏÑ†ÌÉùÏïàÎêú Î≤ÑÌäº ÏÉâÏÉÅ
  }

  const toggleAccordion = (index) => {
    const newAccordionOpen = [...accordionOpen];
    newAccordionOpen[index] = !newAccordionOpen[index];
    setAccordionOpen(newAccordionOpen);

    dispatch(callScheduleManageDetailAPI());

    console.log("data2", data2);

    // ÏöîÏùºÎ≥Ñ Ïä§ÏºÄÏ§Ñ Ï°∞Ìöå
  };

  const onClickSetUpdateHandler = () => {
    console.log("[WorksetUpdate] onClickSetUpdateHandler");

    dispatch(
      callScheduleManageUpdateAPI({
        // Ïä§ÏºÄÏ§Ñ Ïã†Ï≤≠-> ÏäπÏù∏ÏúºÎ°ú Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
        form: form,
      })
    );

    navigate(`/workmanage/setting`, { replace: true });
    window.location.reload();
  };

  return (
    <>
      <div className={ScheduleCSS.sctitle1}>
        <h3>Í∑ºÎ¨¥ Ïä§ÏºÄÏ§Ñ Í¥ÄÎ¶¨</h3>
      </div>

      <div className={ScheduleCSS.scbox}>
        <div className={ScheduleCSS.scboxx}>
          <div className={ScheduleCSS.scset}>
            <div className={ScheduleCSS.signupnam}>Ïã†Ï≤≠ÏùºÏûê</div>
            <div className={ScheduleCSS.signupd}>
              <input
                id="signupDay1"
                className={ScheduleCSS.signupDay1}
                type="date"
              />
              <input
                id="signupDay1"
                className={ScheduleCSS.signupDay1}
                type="date"
              />
            </div>
          </div>

          <div className={ScheduleCSS.statenam}>
            <div className={ScheduleCSS.state1}>ÏäπÏù∏ÏÉÅÌÉú</div>
            <button
              style={getBtnStyle(0)}
              className={ScheduleCSS.state2}
              onClick={() => handleBtnClick(0)}
            >
              Ï†ÑÏ≤¥
            </button>
            <button
              style={getBtnStyle(1)}
              className={ScheduleCSS.state2}
              onClick={() => handleBtnClick(1)}
            >
              Ïã†Ï≤≠
            </button>
            <button
              style={getBtnStyle(2)}
              className={ScheduleCSS.state2}
              onClick={() => handleBtnClick(2)}
            >
              ÏäπÏù∏
            </button>
          </div>

          <div className={ScheduleCSS.scpeop}>
            <div className={ScheduleCSS.signpeo}>Ïã†Ï≤≠Ïûê</div>
            <input
              id="peopleName"
              className={ScheduleCSS.scpeople}
              type="text"
            />
            <button type="button">
              {/* <img src="images/searchButton.png" /> */}üîç
            </button>
          </div>
        </div>
      </div>

      <div className={ScheduleCSS.scbox1}>
        <div className={ScheduleCSS.scbox2}>
          <div className={ScheduleCSS.sclist}>
            <h5>Í∑ºÎ¨¥ Ïä§ÏºÄÏ§Ñ Ïã†Ï≤≠Î¶¨Ïä§Ìä∏</h5>
          </div>
          <button
            className={ScheduleCSS.scapprove}
            onClick={onClickSetUpdateHandler}
          >
            ÏäπÏù∏
          </button>
        </div>
      </div>

      <div className={ScheduleCSS.sctitle2}>
        <div className={`${HRApplistCSS["pplist"]}`}>
          <form>
            <table className={`${ScheduleCSS["appltablee"]}`}>
              <thead className={`${ScheduleCSS["appltheady"]}`}>
                <tr className={`${HRApplistCSS["appltr"]}`}>
                  <th className={`${ScheduleCSS["applthe"]}`}>‚úì</th>
                  <th className={`${ScheduleCSS["applthe"]}`}>Ïã†Ï≤≠ÏùºÏûê</th>
                  <th className={`${ScheduleCSS["applthe"]}`}>Ïã†Ï≤≠Ïûê</th>
                  <th className={`${ScheduleCSS["applthe"]}`}>ÏäπÏù∏ÏÉÅÌÉú</th>
                  <th className={`${ScheduleCSS["applthe"]}`}>Í∑ºÎ¨¥Ïú†Ìòï</th>
                  <th className={`${ScheduleCSS["applthe"]}`}>Í∑ºÎ¨¥ÏãúÍ∞Ñ</th>
                  <th className={`${ScheduleCSS["applthe"]}`}>Ï†ÅÏö©Í∏∞Í∞Ñ</th>
                </tr>
              </thead>

              <tbody>
                {Array.isArray(sclist) &&
                  sclist.map((sc, index) => (
                    <React.Fragment key={index}>
                      <tr className={`${HRApplistCSS["appltr"]}`}>
                        <td className={`${ScheduleCSS["appltde"]}`}>
                          <input
                            type="checkbox"
                            id={`checkbox-${index}`}
                            value={sc.id}
                            checked={checkedBox[index]}
                            onChange={(e) => handleCheckBoxClick(e, index)}
                          />
                        </td>

                        <td className={`${ScheduleCSS["appltde"]}`}>
                          {sc.scheduleNumber &&
                            new Date(
                              sc.scheduleNumber.scheduleApplicationDate
                            ).toLocaleDateString("ko-KR")}
                        </td>

                        <td className={`${ScheduleCSS["appltde"]}`}>
                          {sc.scheduleNumber &&
                            sc.scheduleNumber.memCode.memName}
                        </td>
                        <td className={`${ScheduleCSS["appltde"]}`}>
                          {sc.approvedCode && sc.approvedCode.approvedName}
                        </td>
                        <td className={`${ScheduleCSS["appltde"]}`}>
                          {sc.scheduleNumber &&
                            sc.scheduleNumber.workSettingNumber.worktypeCode
                              .worktypeName}
                        </td>
                        <td className={`${ScheduleCSS["appltde"]}`}>
                          <button
                            onClick={() => toggleAccordion(index)}
                            type="button"
                          >
                            Í∑ºÎ¨¥ÏãúÍ∞ÑÏÉÅÏÑ∏Î≥¥Í∏∞
                          </button>
                        </td>
                        <td className={`${ScheduleCSS["appltde"]}`}>
                          {sc.scheduleNumber &&
                            sc.scheduleNumber.scheduleStartDate}
                        </td>
                      </tr>

                      {accordionOpen[index] && (
                        <tr>
                          <td colSpan="7">
                            <div
                              className={`${HRApplistCSS["accordion-content"]}`}
                            >
                              <table
                                className={`${ScheduleCSS["appltableex"]}`}
                              >
                                <thead
                                  className={`${HRApplistCSS["applthead"]}`}
                                >
                                  <tr className={`${ScheduleCSS["appltre"]}`}>
                                    <th
                                      className={`${ScheduleCSS["applthey"]}`}
                                    >
                                      Ïõî
                                    </th>
                                    <th
                                      className={`${ScheduleCSS["applthey"]}`}
                                    >
                                      Ìôî
                                    </th>
                                    <th
                                      className={`${ScheduleCSS["applthey"]}`}
                                    >
                                      Ïàò
                                    </th>
                                    <th
                                      className={`${ScheduleCSS["applthey"]}`}
                                    >
                                      Î™©
                                    </th>
                                    <th
                                      className={`${ScheduleCSS["applthey"]}`}
                                    >
                                      Í∏à
                                    </th>
                                  </tr>
                                </thead>

                                <tbody>
                                  <tr>
                                    <td className={`${ScheduleCSS["appltde"]}`}>
                                      {data2[0] && data2[0].workStarttime}
                                    </td>
                                    <td className={`${ScheduleCSS["appltde"]}`}>
                                      {data2[1] && data2[1].workStarttime}
                                    </td>
                                    <td className={`${ScheduleCSS["appltde"]}`}>
                                      {data2[2] && data2[2].workStarttime}
                                    </td>
                                    <td className={`${ScheduleCSS["appltde"]}`}>
                                      {data2[3] && data2[3].workStarttime}
                                    </td>
                                    <td className={`${ScheduleCSS["appltde"]}`}>
                                      {data2[4] && data2[4].workStarttime}
                                    </td>
                                  </tr>

                                  <tr>
                                    <td
                                      className={`${ScheduleCSS["appltdex"]}`}
                                    >
                                      {data2[0] && data2[0].workEndtime}
                                    </td>
                                    <td
                                      className={`${ScheduleCSS["appltdex"]}`}
                                    >
                                      {data2[1] && data2[1].workEndtime}
                                    </td>
                                    <td
                                      className={`${ScheduleCSS["appltdex"]}`}
                                    >
                                      {data2[2] && data2[2].workEndtime}
                                    </td>
                                    <td
                                      className={`${ScheduleCSS["appltdex"]}`}
                                    >
                                      {data2[3] && data2[3].workEndtime}
                                    </td>
                                    <td
                                      className={`${ScheduleCSS["appltdex"]}`}
                                    >
                                      {data2[4] && data2[4].workEndtime}
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>
                          </td>
                        </tr>
                      )}
                    </React.Fragment>
                  ))}
              </tbody>
            </table>
          </form>
        </div>
      </div>
    </>
  );
}

export default SchedulManage;
